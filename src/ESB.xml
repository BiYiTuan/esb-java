<?xml version="1.0" encoding="UTF-8"?>
<esb-configuration>
    <server-info>
        <server-name name="dzda_cqgs_server" nodeName="C0CQFDZDA"
                     memo="系统的服务器名获取顺序：1.weblogic的config.xml配置的服务器名，2.esb.server.name环境变化的值，3.此参数值"/>
        <rack-id id="myrack" memo="机架ID，用于支撑机架感知"/>
        <!--
        <running-model model="product" memo="生产模式，在此模式下会自动跳过很多的校验和提示"/>
        <running-model model="test" memo="测试模式，在此模式下会自动跳过很多的校验和提示"/>
        <running-model model="develop" memo="开发模式，在此模式下会进行最严格的校验，以保证其它模式的正确运行"/>
        -->
        <running-model model="product" memo="生产模式，在此模式下会自动跳过很多的校验和提示"/>
    </server-info>

    <service generate-type="running" asyncServiceParallel="5" maxServiceCallLevel="50"
             memo="服务组件配置信息:generate-type属性用于控制服务代理类的生成时机，startup表示服务器启动时生成，其它值表示首次调用时生成" >
        <!--	<filter name="mdm_saveMDVServiceFilter" beforeFilter=""
            afterFilter="com.css.esb.mdm.filter.SaveMDVServiceAfterFilter" exceptionFilter=""/>
             -->
    </service>

    <develop-security-check>
        <!-- 此配置文件用于检查在开发模式下是否能够通过SwordServiceUtils.callService调用服务，source为发起调用请求的类正则表达式
            ，perimit-destination为允许调用的目标类的正则表达式，最小粒度为类级 -->

        <check source=".*" perimit-destination=".*" />
    </develop-security-check>

    <platform-event memo="平台事件配置">
        <class-scanner inclusionJars="(sword.+\.jar)|(gt3.+\.jar)"	inclusionClasses=".+" memo="类扫描框架配置">
            <!--
           <scanner annotation="ClusterCommunicationEventListenerScanner"
                    scanner="com.css.sword.clusterCommunication.SwordClusterCommunicationManagger"
                    memo="集群事件监听器扫描器"/>

           <scanner annotation="CtrlClassScanner"
               scanner="com.css.sword.platform.web.controller.CtrlClassScanner"
               memo="Web框架Ctrl类扫描器"/>
           -->
        </class-scanner>

        <started memo="平台启动完成事件处理器">
            <!-- listener listener="com.css.sword.manger.listener.CommandLineListener" memo="平台命令行监听器"/-->

        </started>
        <!--
        <stop memo="平台停止开始事件处理器">
            <listener listener="com.css.sword.test.event.TestStopListener"
                abc="2" />
        </stop>
         -->
    </platform-event>




    <components memo="组件加载顺序：数据元组件、服务管理组件、事务处理监控组件、性能监控组件、多级缓存组件、集群通信组件、
						持久层组件、服务中介管理组件、缓存数据管理组件、工作流组件、定时任务组件、单元测试数据收集器(最后加载)">
        <!--
      <component name="PersistenceComponentManager" debug="sql"
                 component="com.css.esb.persistence.component.esbPersistenceComponentManager"
                 defaultDsName="esbDS" memo="持久层组件：与数据元结构，提供数据持久化功能，并提供数据访问审计功能" />

      <component name="MediationComponentManager"  refreshCapacity="1" queryRemoteRouteInfo="running"
          component="com.css.esb.mediation.sender.component.MediationComponentManager" memo="服务中介管理组件：提供服务的全域路由支持"/>


        <component name="ESBComponentManager" refreshCapacity="1" queryRemoteRouteInfo="running"       component="com.css.esb.esb.core.component.ESBComponentManager"
                   memo="ESB组件管理器：提供系统间集成、整合ESB基础功能"/>
         -->
    </components>

 </esb-configuration>